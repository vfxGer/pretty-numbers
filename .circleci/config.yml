version: 2.1
orbs:
  codecov: codecov/codecov@3.2.2
  python: circleci/python@1.5.0

jobs:
  test_py38_main:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: |
            poetry run nosetests --with-coverage test_pretty_numbers.py --cover-xml
          name: Test it
      - store_artifacts:
          path: coverage.xml
      - codecov/upload

  test_py39:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: |
            poetry run nosetests test_pretty_numbers.py
  pylint:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: |
            poetry run pylint pretty_numbers
  black:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: |
            poetry run black --check pretty_numbers

  mypy:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: |
            poetry run mypy --strict pretty_numbers
  auto_inc:
    executor: python/default
    steps:
      - add_ssh_keys:
          fingerprints:
            - "31:2f:bb:70:3b:75:d1:5e:71:31:e0:0d:e3:89:fa:08"
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: |
            poetry version patch &&
            git config user.email "circlecigh@mg.issueinfinity.com" &&
            git config user.name "Circle CI" &&
            git add pyproject.toml &&
            git commit -m "Auto incrementing version [skip ci]" &&
            git push -u origin HEAD
  test_publish:
    executor: python/default
    steps:
      - run:
          command: git clone -b main .
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Publish to test pypi
          command: |
            poetry build
            poetry config repositories.test-pypi https://test.pypi.org/legacy/
            poetry config pypi-token.test-pypi $TEST_PYPI_TOKEN
            poetry publish -r test-pypi
  real_publish:
    executor: python/default
    steps:
      - run:
          command: git clone -b main .
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Publish to PyPi
          command: |
            poetry build
            poetry config pypi-token.pypi $PYPI_TOKEN
            poetry publish
            git config user.email "circlecigh@mg.issueinfinity.com"
            git config user.name "Circle CI"
            git tag -a `poetry version -s` -m "Created on circleCI"
            git push origin `poetry version -s`

workflows:
  main:
    jobs:
      - test_py38_main
      - test_py39
      - black
      - mypy
      - pylint
      - auto_inc:
          requires:
            - test_py38_main
            - test_py39
            - black
            - mypy
            - pylint
          filters:
            branches:
              only:
                - main
      - test_publish:
          requires:
            - auto_inc
      - real_publish_approval:
          requires:
            - test_publish
          type: approval
      - real_publish:
          requires:
            - real_publish_approval
